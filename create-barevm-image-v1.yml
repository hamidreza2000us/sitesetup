---
#To run this script 
#1-use the rhvh host which has ansible already installed
#2-Create a .inventory file with following command (change the hostname to mathc RHVM Server)
#cat > .inventory << EOF
#[hosts]
#rhvm.myhost.com
#EOF
#
#3-Then create a password file (not vaulted!) with following command
#cat > ovirt_variables.yml << EOF
#RHVMURL: "https://rhvm.myhost.com/ovirt-engine/api"
#RHVMUser: "admin@internal"
#RHVMPass: "ahoora"
#VMName: "myvm01"
#VMComment: "My VM Comments"
#VMDescription: "VM Description"
#VMTimeZone: "Asia/Tehran"
#VMMemory: "2GiB"
#VMSocket: 2
#VMCore: 2
##common os types are: rhel_8x64, rhel_7x64, windows_2016x64, windows_10
#VMOS: rhel_7x64
#VMDiskSize: 10GiB
#VMStorageDomain: hosted_storage
#VMNetProfile: ovirtmgmt
#VMNetNetwork: ovirtmgmt
#
#EOF
#
#4-Manually change the hostname and password in above files to match your requirements
#5-Run the commands below on rhvh host to send public key to rhvm host
#ssh-copy-id -i .ssh/id_rsa.pub rhvm.myhost.com
#scp rhvm:/etc/pki/ovirt-engine/ca.pem ~/
#
#Then run the following command from ~/
#ansible-playbook -i .inventory site.yml
- name: Create Ovirt VM based on a cow template
  hosts: rhvh01.myhost.com
  tasks:
  - include_vars: ovirt_variables.yml

  - name: Obtain SSO token with using username/password credentials
    ovirt_auth:
      url: "{{ RHVMURL }}"
      username: "{{ RHVMUser }}"
      ca_file: ca.pem
      password: "{{ RHVMPass }}"


  - ovirt_vm:
      auth: "{{ ovirt_auth }}"
      cluster: Default
      name: "{{ VMName }}"
      comment: "{{ VMComment }}"
      description: "{{ VMDescription }}"
      timezone: "{{ VMTimeZone }}"
      soundcard_enabled: no
      memory: "{{ VMMemory }}"
      cpu_cores: "{{ VMCore }}"
      cpu_sockets: "{{ VMSocket }}"
      type: server
      operating_system: "{{ VMOS }}"
      nics:
        - name: nic1

  - ovirt_disk:
      auth: "{{ ovirt_auth }}"
      name: "{{ ImageName }}"
      vm_name: "{{ VMName }}"
      size: "{{ VMDiskSize }}"
      format: cow
      bootable: yes
      interface: virtio_scsi
      storage_domain: "{{ VMStorageDomain }}"

  - ovirt_nic:
      auth: "{{ ovirt_auth }}"
      state: present
      vm: "{{ VMName }}"
      name: nic1
      interface: virtio
      profile: "{{ VMNetProfile }}"
      network: "{{ VMNetNetwork }}"

  - name: fetch keys
    shell: cat /root/.ssh/id_rsa.pub
    register: ssh_keys

  - ovirt_vm:
      auth: "{{ ovirt_auth }}"
      name: "{{ VMName }}"
      state: running
      cloud_init_persist: true
      cloud_init:
        authorized_ssh_keys : "{{ ssh_keys.stdout }}"
        timezone: Asia/Tehran
        host_name: myhost01.myhost.com
        custom_script: |
          write_files:
           - content: |
               Hello, world!
             path: /tmp/greeting.txt
             permissions: '0644'
        user_name: root
        root_password: ahoora
...

